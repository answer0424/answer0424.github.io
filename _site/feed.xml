

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>answer</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-02-27T13:15:08+09:00</updated>
  <author>
    <name>코드로 답하다</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 코드로 답하다 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>리눅스 마스터 2급 2차 2023-03 (1)</title>
    <link href="http://localhost:4000/posts/Linux34/" rel="alternate" type="text/html" title="리눅스 마스터 2급 2차 2023-03 (1)" />
    <published>2025-02-26T12:07:00+09:00</published>
  
    <updated>2025-02-27T12:47:35+09:00</updated>
  
    <id>http://localhost:4000/posts/Linux34/</id>
    <content type="text/html" src="http://localhost:4000/posts/Linux34/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="advanced" />
    
  

  <summary>다음 설명의 상황에 설정해야 하는 작업으로 가장 알맞은 것은?     project 그룹 소유의 디렉터리인 project에 ifduser 사용자가 파일을 생성 시 그룹 소유권을 자동으로 project 그룹 권한을 지정되도록 한다   ① ihduser 사용자를 project 그룹에 추가시킨다  ② project 디렉터리에 Set-UID를 부여한다  ③ project 디렉터리에 Set-GID를 부여한다  ④ project 디렉터리에 Sticky-Bit를 부여한다     그룹 소유권을 자동으로 부여하기 위해서는 특수 bit가 부여되어야 한다   즉 그룹 ID 를 부여해야 한다   참고 : Set-UID(4) Set-GID(2) Sticky-Bit(1)   정답 : 3번   다음 중 lin.txt 파일의 그룹...</summary>

  </entry>

  
  <entry>
    <title>(실습) Virtual Hosting</title>
    <link href="http://localhost:4000/posts/Linux33/" rel="alternate" type="text/html" title="(실습) Virtual Hosting" />
    <published>2025-02-26T11:26:00+09:00</published>
  
    <updated>2025-02-27T12:35:51+09:00</updated>
  
    <id>http://localhost:4000/posts/Linux33/</id>
    <content type="text/html" src="http://localhost:4000/posts/Linux33/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="advanced" />
    
  

  <summary>개요    DNS 서버 (192.168.10.50) -&amp;amp;gt; user4.co.kr 도메인을 192.168.10.100 (Web Server)로 연결   웹 서버 (192.168.10.100) -&amp;amp;gt; 사용자 user4의 웹 사이트 /home/user4/public_html을 설정     DNS 서버 설정 (192.168.10.50)    BIND(named)를 사용하여 user4.co.kr 도메인을 192.168.10.100에 연결 DNS 설정이 완료되면 ping user4.co.kr 하면 192.168.10.100으로 응답해야 한다   DNS 존 파일 생성    설정 파일 : /var/named/user4.co.kr.zone   sudo vi /var/named/user4.co.kr.zone   ...</summary>

  </entry>

  
  <entry>
    <title>Virtual Hosting</title>
    <link href="http://localhost:4000/posts/Linux32/" rel="alternate" type="text/html" title="Virtual Hosting" />
    <published>2025-02-26T11:26:00+09:00</published>
  
    <updated>2025-02-27T11:48:21+09:00</updated>
  
    <id>http://localhost:4000/posts/Linux32/</id>
    <content type="text/html" src="http://localhost:4000/posts/Linux32/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="advanced" />
    
  

  <summary>Virtual Hosting 개념     도메인 별로 서로 다른 웹 사이트 제공   서버 하나로 여러 개의 도메인 운영 가능   각 사용자 계정마다 개별적인 디렉토리 할당 가능   Virtual Hosting 방식     IP 기반 : 하나의 IP에서 여러 개의 IP를 할당하고 각 IP에 다른 웹 사이트를 연결   이름 기반 : 하나의 IP에서 여러 도메인을 운영 (주로 사용)   포트 기반 : 같은 IP지만, 포트를 다르게 설정하여 여러 웹 사이트 제공     Apache Virtual Hosting 설정    Apache(htppd)를 사용하여 사용자 계정별 웹 사이트 구성하는 방법   사용자 계정 생성  sudo useradd user1 sudo useradd user2   사용자별 웹 디렉토리 ...</summary>

  </entry>

  
  <entry>
    <title>Web Server</title>
    <link href="http://localhost:4000/posts/Linux31/" rel="alternate" type="text/html" title="Web Server" />
    <published>2025-02-23T18:13:00+09:00</published>
  
    <updated>2025-02-23T18:13:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Linux31/</id>
    <content type="text/html" src="http://localhost:4000/posts/Linux31/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="advanced" />
    
  

  <summary>Web Server    웹 서버 (Web Server)는 클라이언트(브라우저)의 요청을 받아 HTML, CSS, JS 등의 웹 페이지를 제공하는 역할을 한다 대표적인 웹 서버로는 APache, Nginx, Caddy, Lighttpd 등이 있다   웹 서버의 역할    클라이언트 (웹 브라우저)의 HTTP 요청을 처리   HTML, CSS, JS 등의 정적 콘텐츠 제공   PHP, Python, Java 등을 실행하여 동적 콘턴츠 제공   리버스 프록시 (Reverse Proxy) 역할 수행 가능     웹 서버 종류                 웹 서버       특징                       Apache (httpd)       가장 많이 사용됨, 모듈 확장 가능           ...</summary>

  </entry>

  
  <entry>
    <title>DNS Server</title>
    <link href="http://localhost:4000/posts/Linux30/" rel="alternate" type="text/html" title="DNS Server" />
    <published>2025-02-23T17:30:00+09:00</published>
  
    <updated>2025-02-23T18:12:37+09:00</updated>
  
    <id>http://localhost:4000/posts/Linux30/</id>
    <content type="text/html" src="http://localhost:4000/posts/Linux30/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="advanced" />
    
  

  <summary>DNS (Domain Name System) 서버 개요    DNS는 도메인 이름(www.example.com)을 IP 주소(192.168.1.1)로 변환하는 시스템이다 웹사이트에 접속할 때 사람이 기억하기 쉬운 도메인 대신 서버의 IP 주소를 자동으로 찾아주는 역할을 한다     DNS 서버의 역할    도메인 -&amp;amp;gt; IP 주소 변환 (예: www.google.com =&amp;amp;gt; 142.250.185.36)   IP 주소 -&amp;amp;gt; 도메인 변환 (역방향 조회, PTR 레코드)   메인 서버 (MX 레코드) 및 기타 네트워크 서비스 제공   캐싱을 통한 빠른 네트워크 응답     DNS 조회 과정    사용자가 www.example.com입력   클라이언트(PC)는 로컬 DNS 캐시 확인   없으면 ...</summary>

  </entry>

</feed>


