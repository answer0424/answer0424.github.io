

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>answer</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-02-22T14:53:54+09:00</updated>
  <author>
    <name>코드로 답하다</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 코드로 답하다 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>vsftpd</title>
    <link href="http://localhost:4000/posts/Linux26/" rel="alternate" type="text/html" title="vsftpd" />
    <published>2025-02-22T13:53:00+09:00</published>
  
    <updated>2025-02-22T13:53:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Linux26/</id>
    <content type="text/html" src="http://localhost:4000/posts/Linux26/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="advanced" />
    
  

  <summary>vsftpd (Very Secure FTP Daemon) 개요    vsftpd는 Linux/Unix 기반의 FTP 서버 중 하나로 보안성과 성능이 뛰어나기 때문에 널리 사용된다 이름에서 알 수 있듯이 매우 안전한 FTP 데몬으로 설계되었으며, 빠른 속도, 강력한 보안, 가벼운 성능을 제공하는 것이 특징이다     vsftpd 설치    Ubuntu/Debian 계열   sudo dnf update sudo dnf install vsftpd -y      설치가 완료되면 vsftpd 서비스가 자동으로 실행된다     vsftpd 서비스 관리    vsftpd가 실행되고 있는지 확인하고 필요시 재시작할 수 있다   # 서비스 시작 sudo systemctl start vsftpd  # 서비스 자동 시작 ...</summary>

  </entry>

  
  <entry>
    <title>제어문</title>
    <link href="http://localhost:4000/posts/Java03/" rel="alternate" type="text/html" title="제어문" />
    <published>2025-02-21T11:43:00+09:00</published>
  
    <updated>2025-02-21T12:38:14+09:00</updated>
  
    <id>http://localhost:4000/posts/Java03/</id>
    <content type="text/html" src="http://localhost:4000/posts/Java03/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Fundamentals" />
    
  

  <summary>제어문(Control Statements)    제어문은 프로그램의 흐름을 제어하는 구문이다      조건문(if, switch)   반복문(for, while, do-while)   분기문(break, continue, return)   조건문 (Conditional Statements)    조건에 따라 실행 흐름을 결정하는 문법이다   if-else문    조건이 true면 실행, false면 다른 코드 실행   else if를 이용해 여러 조건을 체크 가능   public class IfExample {     public static void main(String[] args) {         int num = 10;                  if (num &amp;amp;gt; 0) {       ...</summary>

  </entry>

  
  <entry>
    <title>연산자</title>
    <link href="http://localhost:4000/posts/Java02/" rel="alternate" type="text/html" title="연산자" />
    <published>2025-02-21T11:05:00+09:00</published>
  
    <updated>2025-02-21T12:38:14+09:00</updated>
  
    <id>http://localhost:4000/posts/Java02/</id>
    <content type="text/html" src="http://localhost:4000/posts/Java02/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Fundamentals" />
    
  

  <summary>연산자    변수나 값에 대한 연산을 수행하는 기호이다   연산자의 종류                 연산자 종류       설명                       산술연산자       사칙 연산 (+, -, *, /, %)                 대입연산자       변수에 값을 할당 (=, +=, -=, *=, /=, %=)                 비교연산자       두 값을 비교 (==,!=, &amp;amp;gt;, &amp;amp;lt;, &amp;amp;gt;=, &amp;amp;lt;=)                 논리연산자       논리연산 (&amp;amp;amp;&amp;amp;amp;, \|\|)                 증감연산자       변수 값을 1 증가 또는 감소 (++, --)                 비트연산자       비트...</summary>

  </entry>

  
  <entry>
    <title>Redux</title>
    <link href="http://localhost:4000/posts/React12/" rel="alternate" type="text/html" title="Redux" />
    <published>2025-02-19T12:05:00+09:00</published>
  
    <updated>2025-02-19T15:49:12+09:00</updated>
  
    <id>http://localhost:4000/posts/React12/</id>
    <content type="text/html" src="http://localhost:4000/posts/React12/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="React" />
    
    <category term="initial" />
    
  

  <summary>Redux    React와 Redux를 함께 사용하는 방식은 React-Redux 라이브러리를 통해 연결되며, 주로 상태관리와 UI 렌더링을 효율적으로 처리하는 데 사용된다     설치    먼저 React 애플리케이션에서 Redux와 React-Redux를 설치해야 한다   npm install redux react-redux     Redux Store 설정    애플리케이션의 상태를 관리할 Redux Store를 생성한다 이 과정에서 createStore()를 사용하여 리듀서와 상태를 설정한다      리듀서 작성            리듀서는 상태를 어떻게 변경하지 정의하는 함수이다 예를 등러 간단한 카운터 상태를 관리하는 리듀서를 만들어 봅시다           // src/redux/coun...</summary>

  </entry>

  
  <entry>
    <title>변수</title>
    <link href="http://localhost:4000/posts/Java01/" rel="alternate" type="text/html" title="변수" />
    <published>2025-02-19T12:05:00+09:00</published>
  
    <updated>2025-02-19T12:05:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Java01/</id>
    <content type="text/html" src="http://localhost:4000/posts/Java01/" />
    <author>
      <name>코드로 답하다</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Fundamentals" />
    
  

  <summary>변수(Variable)이란?    변수는 데이터를 저장하는 공갑(메모리)이다. Java에서는 변수를 선언할 때 데이터 타입을 명시해야 한다   int number = 10; // 정수형 변수 선언 및 초기화           위 코드에서 int는 데이터 타입, number는 변수명, 10은 변수에 저장된 값이다        데이터 타입    Java의 데이터 타입은 크게 기본형(Primitive Type) 과 참조형(Reference Type) 으로 나뉩니다.      기본형 데이터 타입(Primitive Type)            기본형 데이터 타입은 총 8가지가 있으며 값 자체를 메모리에 저장한다                          데이터 타입       크기       기본값     ...</summary>

  </entry>

</feed>


